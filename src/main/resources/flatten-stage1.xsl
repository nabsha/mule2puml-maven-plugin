<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:ns0="http://www.mulesoft.org/schema/mule/core"
                xmlns:apikit="http://www.mulesoft.org/schema/mule/apikit"
                xmlns:http="http://www.mulesoft.org/schema/mule/http"
                xmlns:jms="http://www.mulesoft.org/schema/mule/jms" >

    <xsl:output omit-xml-declaration="yes" indent="yes"/>
    <xsl:strip-space elements="*"/>

    <xsl:template match="@*|node()">
        <xsl:copy>
            <xsl:apply-templates select="@*|node()"/>
        </xsl:copy>
    </xsl:template>

    <xsl:template match="//ns0:flow-ref">
        <xsl:variable name="flowName" select="current()/@name"/>
        <xsl:choose>
            <xsl:when test="/ns0:mule/ns0:sub-flow[@name=$flowName]">
                <xsl:apply-templates select="/ns0:mule/ns0:sub-flow[@name=$flowName]/*"/>
            </xsl:when>
            <xsl:when test="/ns0:mule/ns0:flow[@name=$flowName]">
                <xsl:apply-templates select="/ns0:mule/ns0:flow[@name=$flowName]/*"/>
            </xsl:when>
            <xsl:otherwise>
                <xsl:copy><xsl:apply-templates select="node()|@*"/></xsl:copy>
            </xsl:otherwise>
        </xsl:choose>

    </xsl:template>

    <xsl:template match="/ns0:mule/ns0:flow">
        <xsl:variable name="flowName" select="current()/@name"/>
        <xsl:choose>
             if current flow is generated by apikit
            <xsl:when test="contains($flowName, /ns0:mule/apikit:config/@name)">
                <xsl:variable name="apikitConfigName" select="/ns0:mule/apikit:config[contains($flowName, @name)]/@name"/>
                <!-- found apikit configuration for this flow, now find the main apikit flow -->
                <xsl:copy>
                    <xsl:attribute name="name"><xsl:value-of select="@name"/></xsl:attribute>
                    <!-- enrich the http:listener from the config and keep rest of the flow as is.
                    Assuming that apikit does not have additional logic other than calling relevant flows -->
                    <xsl:apply-templates select="/ns0:mule/ns0:flow/apikit:router[@config-ref=$apikitConfigName]/parent::node()/http:listener"/>
                    <!--<xsl:copy-of select="node()|@*"/>-->
                    <xsl:apply-templates select="node()|@*"/>
                </xsl:copy>

            </xsl:when>
            <!-- if the current flow is main apikit flow, then add comments-->
            <xsl:when test="current()/apikit:router">
                <xsl:copy>
                    <xsl:attribute name="doc:description"><xsl:value-of select="'mule2puml-ignore-router-flow'"/></xsl:attribute>
                    <xsl:apply-templates select="node()|@*"/>
                    <xsl:copy-of select="node()|@*"/>
                </xsl:copy>
            </xsl:when>
            <!-- if current flow is not an entry flow, i.e. it is being used by other flow in a flowref-->
            <xsl:when test="not(//ns0:flow-ref[@name=$flowName] or current()/http:listener or current()/jms:inbound-endpoint)">
                <xsl:copy>
                    <xsl:attribute name="doc:description"><xsl:value-of select="'mule2puml-ignore'"/></xsl:attribute>
                    <xsl:apply-templates select="node()|@*"/>
                    <xsl:copy-of select="node()|@*"/>
                </xsl:copy>
            </xsl:when>
            <!-- all other flows are passed on as is-->
            <xsl:otherwise>
                <xsl:copy>
                    <xsl:apply-templates select="@*|node()"/>
                </xsl:copy>
                </xsl:otherwise>
        </xsl:choose>
    </xsl:template>


</xsl:stylesheet>